/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-02-18 20:33:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.modalclasses.ConformationdetailsModal;
import com.modalclasses.SeatModal;
import com.modalclasses.AvailableModal;
import com.modalclasses.UserDetailsModal;
import com.modalclasses.SrcDestDate;
import java.util.ArrayList;

public final class UserDetailsAfterBooked_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.modalclasses.UserDetailsModal");
    _jspx_imports_classes.add("com.modalclasses.AvailableModal");
    _jspx_imports_classes.add("com.modalclasses.ConformationdetailsModal");
    _jspx_imports_classes.add("com.modalclasses.SrcDestDate");
    _jspx_imports_classes.add("com.modalclasses.SeatModal");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
 ArrayList<ConformationdetailsModal> acdm = (ArrayList<ConformationdetailsModal>)request.getAttribute("userbookeddetails"); 
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>user details</title>\r\n");
      out.write("    <link\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\"\r\n");
      out.write("    />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/userafter.css\" />\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <!-- partial:index.partial.html -->\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <div class=\"ticket basic\">\r\n");
      out.write("        <p>Admit One</p>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      ");
 for(ConformationdetailsModal i : acdm ){ 
      out.write("\r\n");
      out.write("      <div class=\"ticket airline\">\r\n");
      out.write("        <div class=\"top\">\r\n");
      out.write("          <h1>PREVIEW</h1>\r\n");
      out.write("          <div class=\"big\">\r\n");
      out.write("            <p class=\"from\" style=\"font-size: 40px; margin-left: 36px\">\r\n");
      out.write("              ");
      out.print(i.getSource() );
      out.write("\r\n");
      out.write("            </p>\r\n");
      out.write("            <p style=\"margin-left: 87px; font-size: 40px; padding: 10px 0px\">\r\n");
      out.write("              to\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"to\">");
      out.print(i.getDestination() );
      out.write("</p>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"top--side\">\r\n");
      out.write("            <i class=\"fas fa-bus\" src=\"./img/buslogo.png\"></i>\r\n");
      out.write("            <p>MSTANG</p>\r\n");
      out.write("            <p style=\"margin-right: -11px\">Bus Services</p>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"bottom\">\r\n");
      out.write("          <div class=\"column\">\r\n");
      out.write("            <div class=\"row row-1\">\r\n");
      out.write("              <p><span>BUS REG NO</span>");
      out.print(i.getBusregNo() );
      out.write("</p>\r\n");
      out.write("              <p class=\"row--right\"><span>SEAT NO</span>");
      out.print(i.getSeatNo() );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row row-2\">\r\n");
      out.write("              <p><span>Boarding-Time</span>");
      out.print(i.getBoardingTime() );
      out.write("</p>\r\n");
      out.write("              <p class=\"row--center\"><span>Depart-Time</span>");
      out.print(i.getDepartTime() );
      out.write("</p>\r\n");
      out.write("              <p class=\"row--right\"><span>Date-of-travel</span>");
      out.print(i.getDateOfTravel() );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row row-3\">\r\n");
      out.write("              <p><span>Passenger - Name</span>");
      out.print(i.getPassengerName() );
      out.write("</p>\r\n");
      out.write("              <p class=\"row--center\"><span>EMAIL</span>");
      out.print(i.getEmail() );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- <div class=\"bar--code\"></div> -->\r\n");
      out.write("          <div style=\"text-align: center; margin-top: -14px\">\r\n");
      out.write("            <a\r\n");
      out.write("              href=\"./clicktopayment.jsp\"\r\n");
      out.write("              style=\"\r\n");
      out.write("                text-decoration: none;\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                border: #ffcc05;\r\n");
      out.write("                background-color: #ffcc05;\r\n");
      out.write("                padding: 14px 11px;\r\n");
      out.write("                border-radius: 65px;\r\n");
      out.write("              \"\r\n");
      out.write("              >click to payment</a\r\n");
      out.write("            >\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <div class=\"info\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- partial -->\r\n");
      out.write("    <script src=\"./script.js\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
