/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-02-14 20:48:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.modalclasses.SrcDestDate;
import java.util.ArrayList;
import java.sql.ResultSet;
import com.modalclasses.AvailableModal;

public final class availablebusdetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.modalclasses.AvailableModal");
    _jspx_imports_classes.add("com.modalclasses.SrcDestDate");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
 ArrayList<AvailableModal> ams =(ArrayList<AvailableModal>)request.getAttribute("AvailableModals"); 
      out.write('\r');
      out.write('\n');
 ArrayList<SrcDestDate> all=(ArrayList<SrcDestDate>) request.getAttribute("separate"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <!-- Style CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/style.css\" />\r\n");
      out.write("    <!-- Demo CSS (No need to include it into your project) -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/demo.css\" />\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("  \r\n");
      out.write("    <div class=\"main\">\r\n");
      out.write("    \r\n");
      out.write("      <main class=\"app\">\r\n");
      out.write("        <div class=\"screen-wrap\">\r\n");
      out.write("          <section class=\"screen-bus\" style=\"opacity: 1\">\r\n");
      out.write("           ");
 for(SrcDestDate sdd :all){ 
      out.write("\r\n");
      out.write("            <div class=\"screen-bus__location-filter-wrap\">\r\n");
      out.write("              <div class=\"screen-bus__location-filter-row\">\r\n");
      out.write("                <div class=\"screen-bus__location\">\r\n");
      out.write("                  <div class=\"screen-bus__location-row\">\r\n");
      out.write("                    <span class=\"screen-bus__location-col\">");
      out.print(sdd.getSource());
      out.write("</span>\r\n");
      out.write("                    <span class=\"screen-home__rs-arrow\"></span>\r\n");
      out.write("                    <span class=\"screen-bus__location-col\">");
      out.print(sdd.getDestination());
      out.write("</span>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"screen-bus__date-row\">\r\n");
      out.write("                    <span>");
      out.print(sdd.getRegNo());
      out.write("</span>\r\n");
      out.write("                    \r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"screen-bus__filter\">\r\n");
      out.write("                  <figure>\r\n");
      out.write("                    <img src=\"https://i.ibb.co/ZJt9tkM/filter.png\" />\r\n");
      out.write("                  </figure>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
 }
      out.write(" \r\n");
      out.write("           \r\n");
      out.write("            ");
 for(AvailableModal av :ams){ 
      out.write("\r\n");
      out.write("            <div class=\"screen-bus__travels-wrap\">\r\n");
      out.write("              <div class=\"screen-bus__travels-row\">\r\n");
      out.write("                <div\r\n");
      out.write("                  class=\"screen-bus__travels-col\"\r\n");
      out.write("                  style=\"opacity: 1; transform: matrix(1, 0, 0, 1, 0, 0)\"\r\n");
      out.write("                >\r\n");
      out.write("                  <div class=\"screen-bus__name-time-seat\">\r\n");
      out.write("                    <div class=\"screen-bus__name-wrap\">\r\n");
      out.write("                      <span class=\"screen-bus__name\">");
      out.print(av.getRegNo() );
      out.write("</span>\r\n");
      out.write("                      <span class=\"screen-bus__type\">Non A/C</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"screen-bus__time-wrap\">\r\n");
      out.write("                      <div class=\"screen-bus__time\">\r\n");
      out.write("                        <div class=\"screen-bus__start\">");
      out.print(av.getArrivalTime() );
      out.write("</div>\r\n");
      out.write("                        <div class=\"screen-bus__time-arrow-wrap\">\r\n");
      out.write("                          <span class=\"screen-bus__time-arrow\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"screen-bus__end\">");
      out.print(av.getDeparturetime() );
      out.write("</div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"screen-bus__hrs\">\r\n");
      out.write("                        <span>2 hrs</span>\r\n");
      out.write("                      </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"screen-bus__seat-wrap\">\r\n");
      out.write("                      <div>\r\n");
      out.write("                        <span class=\"screen-bus__count\">26</span>\r\n");
      out.write("                        Seats Available<br />\r\n");
      out.write("                        <span><span>â¹</span> ");
      out.print(av.getTicketCharges() );
      out.write("</span>\r\n");
      out.write("                      </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  \r\n");
      out.write("                      \r\n");
      out.write("                      <div class=\"screen-bus__price\">\r\n");
      out.write("                        <button>\r\n");
      out.write("                          <a href=\"./seatsAvailable.jsp\">click to book</a>\r\n");
      out.write("                        </button>\r\n");
      out.write("                      </div>\r\n");
      out.write("                    \r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            </div>\r\n");
      out.write("             ");
 }
      out.write("\r\n");
      out.write("          </section>\r\n");
      out.write("        </div>\r\n");
      out.write("     \r\n");
      out.write("      </main>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
